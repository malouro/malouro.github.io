{"version":3,"sources":["components/Header.tsx","components/SkipLink.tsx","pages/Home.tsx","components/MainContent.tsx","root/Theme.ts","root/App.tsx","serviceWorker.ts","index.tsx"],"names":["HeaderStyles","makeStyles","theme","container","position","height","spacing","overflow","color","palette","getContrastText","primary","main","headerBg","top","bottom","left","right","width","backgroundImage","darken","dark","background","default","gutter","flexGrow","menuButton","Header","useTheme","classes","React","useState","anchorEl","setAnchorEl","handleClose","menuOptions","className","AppBar","component","elevation","Toolbar","IconButton","aria-label","href","style","useMediaQuery","breakpoints","down","edge","onClick","event","currentTarget","Menu","open","Boolean","onClose","map","option","MenuItem","key","button","Button","toLocaleLowerCase","SkipLinkStyles","createStyles","skipLink","zIndex","backgroundColor","fontSize","typography","padding","focusBorder","SkipLink","Link","Typography","HomeStyles","textAlign","title","marginBottom","avatar","margin","Home","Avatar","src","variant","MainContentStyles","outline","secondary","marginTop","borderRadius","shape","containerSm","maxWidth","content","MainContent","props","smallView","Paper","clsx","path","CommonFocusStyle","lightBlue","MyTheme","createMuiTheme","type","contrastThreshold","paper","indigo","fontFamily","join","overrides","MuiCssBaseline","body","MuiButtonBase","root","MuiLink","textDecorationThickness","MuiButton","disableFocusRipple","MuiIconButton","underline","App","id","ThemeProvider","CssBaseline","tabIndex","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3146a98a.chunk.js","sourcesContent":["import React from 'react'\nimport { makeStyles, Theme, useTheme, darken } from '@material-ui/core/styles'\nimport {\n\tAppBar,\n\tButton,\n\tIconButton,\n\tMenu,\n\tMenuItem,\n\tToolbar,\n} from '@material-ui/core'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport { Menu as MenuIcon, HomeOutlined as HomeIcon } from '@material-ui/icons'\n\nexport const HeaderStyles = makeStyles((theme: Theme) => ({\n\tcontainer: {\n\t\tposition: 'relative',\n\t\theight: theme.spacing(20),\n\t\toverflow: 'hidden',\n\t\tcolor: theme.palette.getContrastText(theme.palette.primary.main)\n\t},\n\theaderBg: {\n\t\tposition: 'absolute',\n\t\ttop: 0,\n\t\tbottom: 0,\n\t\tleft: 0,\n\t\tright: 0,\n\t\twidth: '100%',\n\t\theight: '100%',\n\t\tbackgroundImage:\n\t\t\t`linear-gradient(${darken(theme.palette.primary.dark, 0.5)}, ${theme.palette.background.default})`\n\t},\n\tgutter: {\n\t\tflexGrow: 1\n\t},\n\tmenuButton: { }\n}))\n\nexport const Header = () => {\n\tconst theme = useTheme()\n\tconst classes = HeaderStyles()\n\tconst [anchorEl, setAnchorEl] = React.useState<Element|null>(null)\n\n\tconst handleClick = (event: any) => { setAnchorEl(event.currentTarget) }\n\tconst handleClose = () => { setAnchorEl(null) }\n\n\tconst menuOptions = ['Blog', 'Projects', 'Contact']\n\n\treturn (\n\t\t<header className={classes.container}>\n\t\t\t<div className={classes.headerBg} />\n\t\t\t<AppBar\n\t\t\t\tcomponent=\"div\"\n\t\t\t\tposition=\"static\"\n\t\t\t\tcolor=\"transparent\"\n\t\t\t\televation={0}\n\t\t\t>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<IconButton aria-label=\"Go to home page\" component=\"a\" href=\"/\">\n\t\t\t\t\t\t<HomeIcon color=\"inherit\" />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<div style={{ flexGrow: 1 }} className={classes.gutter} />\n\t\t\t\t\t{useMediaQuery(theme.breakpoints.down('xs')) ? (\n\t\t\t\t\t\t// Mobile view\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tclassName={classes.menuButton}\n\t\t\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\t\taria-label=\"Open navigation menu\"\n\t\t\t\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t<Menu open={Boolean(anchorEl)} anchorEl={anchorEl} onClose={handleClose}>\n\t\t\t\t\t\t\t\t{menuOptions.map(option => (\n\t\t\t\t\t\t\t\t\t<MenuItem key={`MenuOption-${option}`} button onClick={handleClose}>\n\t\t\t\t\t\t\t\t\t\t{option}\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</Menu>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t// Desktop view\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{menuOptions.map(option => (\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tkey={`MenuOption-${option}`}\n\t\t\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\t\t\thref={`/${option.toLocaleLowerCase()}`}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{option}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</header>\n\t)\n}\n","import React from 'react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\nimport Link from '@material-ui/core/Link'\nimport Typography from '@material-ui/core/Typography'\n\nexport const SkipLinkStyles = makeStyles((theme) => createStyles({\n\tcontainer: {},\n\tskipLink: {\n\t\tleft: '-999px',\n\t\tposition: 'absolute',\n\t\ttop: 'auto',\n\t\twidth: 1,\n\t\theight: 1,\n\t\toverflow: 'hidden',\n\t\tzIndex: -999,\n\n\t\tcolor: theme.palette.getContrastText(theme.palette.primary.main),\n\t\tbackgroundColor: theme.palette.background.default,\n\t\tfontSize: theme.typography.button.fontSize,\n\n\t\t'&:focus': {\n\t\t\tleft: 'auto',\n\t\t\twidth: 'auto',\n\t\t\theight: 'auto',\n\t\t\toverflow: 'auto',\n\t\t\tpadding: theme.spacing(1, 2),\n\t\t\tzIndex: 999,\n\t\t\t...theme.palette.focusBorder\n\t\t}\n\t}\n}))\n\nexport const SkipLink = () => {\n\tconst classes = SkipLinkStyles()\n\n\treturn (\n\t\t<div className={classes.container}>\n\t\t\t<Link className={classes.skipLink} href=\"#main\">\n\t\t\t\t<Typography color=\"inherit\">Skip to main content</Typography>\n\t\t\t</Link>\n\t\t</div>\n\t)\n}\n","import React from 'react'\n\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\nimport { makeStyles, Theme } from '@material-ui/core/styles'\nimport { Avatar } from '@material-ui/core'\n\nexport const HomeStyles = makeStyles((theme: Theme) => ({\n\tcontainer: {\n\t\ttextAlign: 'center'\n\t},\n\ttitle: {\n\t\tmarginBottom: theme.spacing(4)\n\t},\n\tavatar: {\n\t\twidth: theme.spacing(30),\n\t\theight: theme.spacing(30),\n\t\ttextAlign: 'center',\n\t\tmargin: 'auto'\n\t}\n}))\n\nexport const Home = () => {\n\tconst classes = HomeStyles()\n\tconst avatarUrl =\n\t\t'https://avatars2.githubusercontent.com/u/31722675?s=460&u=9bc1d330dd8f219fe7be7d4e1f57cea6efcc9920&v=4'\n\n\treturn (\n\t\t<div className={classes.container}>\n\t\t\t<Avatar className={classes.avatar} src={avatarUrl} />\n\t\t\t<Typography variant=\"h1\" className={classes.title}>\n\t\t\t\tMike A. Louro\n\t\t\t</Typography>\n\t\t\t<Typography>Main content goes here.</Typography>\n\t\t\t<Link href=\"http://google.com\">Google link</Link>\n\t\t</div>\n\t)\n}\n","import React from 'react'\nimport { Route } from 'react-router'\nimport clsx from 'clsx'\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport Paper from '@material-ui/core/Paper'\n\nimport { Home } from '../pages'\n\nexport const MainContentStyles = makeStyles((theme) => ({\n\tcontainer: {\n\t\tbackgroundColor: 'transparent',\n\t\toutline: `2px dotted ${theme.palette.secondary.main}`,\n\t\twidth: '100%',\n\t\tposition: 'relative',\n\t\tmarginTop: theme.spacing(-4),\n\t\tmarginBottom: theme.spacing(3),\n\t\tmargin: '0 auto',\n\t\tpadding: theme.spacing(4, 6, 3, 6),\n\t\tborderRadius: theme.shape.borderRadius\n\t},\n\tcontainerSm: {\n\t\tmaxWidth: 'auto',\n\t\tborderRadius: 0,\n\t\tpadding: theme.spacing(4, 0, 3, 0)\n\t},\n\tcontent: {\n\t\tpadding: theme.spacing(3)\n\t}\n}))\n\nexport interface MainContentProps {\n\tid: string,\n\ttabIndex?: 0 | -1\n}\n\nexport const MainContent = (props: MainContentProps) => {\n\tconst theme = useTheme()\n\tconst classes = MainContentStyles()\n\tconst smallView = useMediaQuery(theme.breakpoints.down('xs'))\n\n\treturn (\n\t\t<main {...props}>\n\t\t\t<Paper className={clsx(classes.container, smallView && classes.containerSm)}>\n\t\t\t\t<div className={classes.content}>\n\t\t\t\t\t<Route path=\"/\" component={Home} />\n\t\t\t\t</div>\n\t\t\t</Paper>\n\t\t</main>\n\t)\n}\n","import { createMuiTheme, darken } from '@material-ui/core/styles'\nimport { indigo, lightBlue } from '@material-ui/core/colors'\n// import { images } from './bg.json'\n\nexport const CommonFocusStyle = {\n\toutline: `4px solid ${lightBlue[300]}`,\n}\n\nexport const DisableFocusStyle = {\n\toutline: 'none'\n}\n\nexport const MyTheme = createMuiTheme({\n\tpalette: {\n\t\ttype: 'dark',\n\t\t/** @ref https://www.w3.org/TR/WCAG21/#contrast-minimum */\n\t\tcontrastThreshold: 4.5,\n\t\tbackground: {\n\t\t\tdefault: '#111',\n\t\t\tpaper: darken(indigo[900], 0.5),\n\t\t},\n\t\tfocusBorder: CommonFocusStyle,\n\t\tprimary: {\n\t\t\tmain: indigo[500]\n\t\t},\n\t\tsecondary: {\n\t\t\tmain: lightBlue[300]\n\t\t}\n\t},\n\ttypography: {\n\t\tfontFamily: [\n\t\t\t'Montserrat',\n\t\t\t'Helvetica Neue',\n\t\t\t'\\'sans-serif\\''\n\t\t].join(',')\n\t},\n\tshape: {\n\t\tborderRadius: 10\n\t},\n\toverrides: {\n\t\tMuiCssBaseline: {\n\t\t\t'@global': {\n\t\t\t\tbody: {\n\t\t\t\t\t// backgroundImage: images[0]\n\t\t\t\t},\n\t\t\t\t':focus': DisableFocusStyle\n\t\t\t}\n\t\t},\n\t\tMuiButtonBase: {\n\t\t\troot: {\n\t\t\t\t'&$focusVisible': CommonFocusStyle\n\t\t\t}\n\t\t},\n\t\tMuiLink: {\n\t\t\troot: {\n\t\t\t\tcolor: 'inherit',\n\t\t\t\t'&$focusVisible': CommonFocusStyle,\n\t\t\t\t'&:hover': {\n\t\t\t\t\ttextDecorationThickness: '5px',\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tprops: {\n\t\tMuiButton: {\n\t\t\tdisableFocusRipple: true\n\t\t},\n\t\tMuiIconButton: {\n\t\t\tdisableFocusRipple: true\n\t\t},\n\t\tMuiLink: {\n\t\t\tunderline: 'always'\n\t\t}\n\t}\n})\n","import React from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\n\nimport { Header, MainContent, SkipLink } from '../components'\nimport { MyTheme } from './Theme'\n\nfunction App() {\n\treturn (\n\t\t<div id=\"root\">\n\t\t\t<ThemeProvider theme={MyTheme}>\n\t\t\t\t<CssBaseline />\n\t\t\t\t<SkipLink />\n\t\t\t\t<Header />\n\t\t\t\t<Router>\n\t\t\t\t\t<MainContent id=\"main\" tabIndex={-1} />\n\t\t\t\t</Router>\n\t\t\t</ThemeProvider>\n\t\t</div>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './root/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}