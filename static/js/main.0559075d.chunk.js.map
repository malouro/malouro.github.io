{"version":3,"sources":["components/Header.tsx","components/ProjectCard.tsx","pages/Home.tsx","data/ProjectData.tsx","pages/Projects.tsx","components/MainContent.tsx","components/SkipLink.tsx","root/Theme.ts","root/App.tsx","serviceWorker.ts","index.tsx"],"names":["HeaderStyles","makeStyles","theme","container","position","height","spacing","overflow","color","palette","getContrastText","secondary","dark","headerBg","top","bottom","left","right","width","backgroundImage","darken","background","default","gutter","flexGrow","menuButton","optionButton","marginLeft","Header","useTheme","classes","React","useState","anchorEl","setAnchorEl","handleClose","menuOptions","title","icon","AboutIcon","ProjectIcon","ArtIcon","BlogIcon","className","AppBar","component","elevation","Toolbar","IconButton","aria-label","href","style","useMediaQuery","breakpoints","down","edge","onClick","event","currentTarget","Menu","keepMounted","open","Boolean","onClose","map","index","MenuItem","key","button","Link","toLocaleLowerCase","OptionIcon","Button","startIcon","ProjectCard","props","data","other","subtitle","description","thumbnail","links","outlineThickness","Card","root","CardMedia","image","content","CardHeader","subheader","titleTypographyProps","variant","CardContent","Typography","CardActions","length","link","size","url","type","defaultProps","withStyles","minWidth","marginBottom","display","boxShadow","primary","main","paddingLeft","up","common","black","HomeStyles","textAlign","avatar","backgroundColor","margin","Home","Avatar","src","role","marginTop","Projects","process","ProjectsPage","pageTitle","useStyles","projectData","i","MainContentStyles","outline","padding","borderRadius","shape","containerSm","maxWidth","MainContent","smallView","Box","clsx","path","exact","SkipLinkStyles","createStyles","skipLink","zIndex","fontSize","typography","focus","SkipLink","Palette","lightBlue","indigo","CommonFocusStyle","MyTheme","createMuiTheme","contrastThreshold","paper","grey","fontFamily","join","h1","h2","h3","h4","overrides","MuiCssBaseline","body","fontWeight","MuiButtonBase","MuiLink","textDecorationThickness","MuiCard","MuiButton","disableFocusRipple","MuiIconButton","underline","App","ThemeProvider","CssBaseline","id","tabIndex","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0559075d.chunk.js","sourcesContent":["import React from 'react'\nimport { makeStyles, Theme, useTheme, darken } from '@material-ui/core/styles'\nimport {\n\tAppBar,\n\tButton,\n\tIconButton,\n\tMenu,\n\tMenuItem,\n\tLink,\n\tToolbar,\n} from '@material-ui/core'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport {\n\tMenu as MenuIcon,\n\tHomeOutlined as HomeIcon,\n\tInfo as AboutIcon,\n\tBrush as ArtIcon,\n\tBuild as ProjectIcon,\n\tQuestionAnswer as BlogIcon\n} from '@material-ui/icons'\n\nconst HeaderStyles = makeStyles((theme: Theme) => ({\n\tcontainer: {\n\t\tposition: 'relative',\n\t\theight: theme.spacing(20),\n\t\toverflow: 'hidden',\n\t\tcolor: theme.palette.getContrastText(theme.palette.secondary.dark)\n\t},\n\theaderBg: {\n\t\tposition: 'absolute',\n\t\ttop: 0,\n\t\tbottom: 0,\n\t\tleft: 0,\n\t\tright: 0,\n\t\twidth: '100%',\n\t\theight: '100%',\n\t\tbackgroundImage:\n\t\t\t`linear-gradient(${\n\t\t\t\tdarken(theme.palette.secondary.dark, 0.5)\n\t\t\t}, ${\n\t\t\t\ttheme.palette.background.default\n\t\t\t})`\n\t},\n\tgutter: {\n\t\tflexGrow: 1\n\t},\n\tmenuButton: { },\n\toptionButton: {\n\t\tmarginLeft: theme.spacing(2)\n\t}\n}))\n\nexport default function Header (): JSX.Element {\n\tconst theme = useTheme()\n\tconst classes = HeaderStyles()\n\tconst [anchorEl, setAnchorEl] = React.useState<Element|null>(null)\n\n\tconst handleClick = (event: any) => { setAnchorEl(event.currentTarget) }\n\tconst handleClose = () => { setAnchorEl(null) }\n\n\tconst menuOptions = [\n\t\t{ title: 'About', icon: AboutIcon },\n\t\t{ title: 'Projects', icon: ProjectIcon },\n\t\t{ title: 'Art', icon: ArtIcon },\n\t\t{ title: 'Blog', icon: BlogIcon }\n\t]\n\n\treturn (\n\t\t<header className={classes.container}>\n\t\t\t<div className={classes.headerBg} />\n\t\t\t<AppBar\n\t\t\t\tcomponent=\"div\"\n\t\t\t\tposition=\"static\"\n\t\t\t\tcolor=\"transparent\"\n\t\t\t\televation={0}\n\t\t\t>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<IconButton aria-label=\"Go to home page\" component=\"a\" href=\"/\">\n\t\t\t\t\t\t<HomeIcon color=\"inherit\" />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<div style={{ flexGrow: 1 }} className={classes.gutter} />\n\t\t\t\t\t{useMediaQuery(theme.breakpoints.down('xs')) ? (\n\t\t\t\t\t\t// Mobile view\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tclassName={classes.menuButton}\n\t\t\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\t\taria-label=\"Open navigation menu\"\n\t\t\t\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t<Menu\n\t\t\t\t\t\t\t\tanchorEl={anchorEl}\n\t\t\t\t\t\t\t\tkeepMounted\n\t\t\t\t\t\t\t\topen={Boolean(anchorEl)}\n\t\t\t\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{[...menuOptions.map(({ title }, index) => (\n\t\t\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\t\t\tkey={`option-${index}`}\n\t\t\t\t\t\t\t\t\t\tonClick={handleClose}\n\t\t\t\t\t\t\t\t\t\tbutton\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Link href={`/${title.toLocaleLowerCase()}`}>{title}</Link>\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t))]}\n\t\t\t\t\t\t\t</Menu>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t// Desktop view\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{[...menuOptions.map(({ title, icon: OptionIcon }, index) => (\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tkey={`option-${index}`}\n\t\t\t\t\t\t\t\t\tclassName={classes.optionButton}\n\t\t\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\t\t\thref={`/${title.toLocaleLowerCase()}`}\n\t\t\t\t\t\t\t\t\tstartIcon={<OptionIcon />}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t))]}\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</header>\n\t)\n}\n","import React, { ReactElement } from 'react'\nimport { Card, CardContent, CardHeader, CardMedia, CardActions, Button, Typography } from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\nimport { MyTheme } from '../root/Theme'\n\nexport interface ProjectLink {\n\turl: string,\n\ttype?: 'github' | 'blog'\n}\n\nexport interface ProjectData {\n\ttitle: string | ReactElement,\n\tsubtitle?: string | ReactElement,\n\tdescription: string | ReactElement,\n\tthumbnail?: string,\n\tlinks?: Array<ProjectLink>,\n}\n\ninterface ProjectCardProps {\n\tclasses?:{\n\t\troot?: string,\n\t\tthumbnail?: string,\n\t\tcontent?: string\n\t},\n\toutlineThickness?: number,\n\tdata: ProjectData\n}\n\nconst ProjectCardStyles = (theme: typeof MyTheme) => ({\n\troot: {\n\t\tminWidth: theme.spacing(40),\n\t\tmarginBottom: theme.spacing(4),\n\t\tdisplay: 'flex',\n\t\tboxShadow: (props: ProjectCardProps) =>\n\t\t\t`inset -${props.outlineThickness}px 0 ${theme.palette.primary.main}`\n\t},\n\tthumbnail: {\n\t\t[theme.breakpoints.down('sm')]: {\n\t\t\theight: theme.spacing(20),\n\t\t\tpaddingLeft: theme.spacing(20),\n\t\t},\n\t\t[theme.breakpoints.up('md')]: {\n\t\t\theight: theme.spacing(40),\n\t\t\tpaddingLeft: theme.spacing(40),\n\t\t},\n\t\tmargin: theme.spacing(4),\n\t\tfilter: `drop-shadow(${\n\t\t\ttheme.spacing(1)\n\t\t}px ${\n\t\t\ttheme.spacing(1)\n\t\t}px 3px ${\n\t\t\ttheme.palette.common.black\n\t\t})`\n\t},\n\tcontent: {\n\t\tmarginLeft: theme.spacing(2)\n\t}\n})\n\nconst ProjectCard: React.FC<ProjectCardProps> = (props: ProjectCardProps): JSX.Element => {\n\tconst { classes, data, ...other } = props\n\tconst { title, subtitle, description, thumbnail, links } = data\n\n\tdelete other.outlineThickness\n\n\treturn (\n\t\t<Card className={classes.root} {...other}>\n\t\t\t{thumbnail && <CardMedia className={classes.thumbnail} image={thumbnail} />}\n\t\t\t<div className={classes.content}>\n\t\t\t\t<CardHeader title={title} subheader={subtitle} titleTypographyProps={{ variant: 'h2' }} />\n\t\t\t\t<CardContent>\n\t\t\t\t\t<Typography>{description}</Typography>\n\t\t\t\t</CardContent>\n\t\t\t\t<CardActions>\n\t\t\t\t\t{links.length > 0 && links.map((link, index) => {\n\t\t\t\t\t\treturn <Button\n\t\t\t\t\t\t\tkey={`project-card-link-${index}`}\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\thref={link.url}\n\t\t\t\t\t\t>{link.type}</Button>\n\t\t\t\t\t})}\n\t\t\t\t</CardActions>\n\t\t\t</div>\n\t\t</Card>\n\t)\n}\n\nProjectCard.defaultProps = {\n\toutlineThickness: 10\n}\n\nexport default withStyles(ProjectCardStyles)(ProjectCard)\n","import React from 'react'\n\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Avatar, useTheme } from '@material-ui/core'\nimport { MyTheme } from '../root/Theme'\n\nexport const HomeStyles = makeStyles((theme: typeof MyTheme) => ({\n\tcontainer: {\n\t\ttextAlign: 'center'\n\t},\n\ttitle: {\n\t\tmarginBottom: theme.spacing(4)\n\t},\n\tavatar: {\n\t\twidth: theme.spacing(30),\n\t\theight: theme.spacing(30),\n\t\tbackgroundColor: theme.palette.primary.main,\n\t\ttextAlign: 'center',\n\t\tmargin: 'auto',\n\t\tmarginBottom: theme.spacing(5)\n\t}\n}))\n\nexport default function Home(): JSX.Element {\n\tconst classes = HomeStyles()\n\tconst avatarUrl =\n\t\t'https://avatars2.githubusercontent.com/u/31722675?s=460&u=9bc1d330dd8f219fe7be7d4e1f57cea6efcc9920&v=4'\n\tconst { spacing } = useTheme()\n\n\treturn (\n\t\t<div className={classes.container}>\n\t\t\t<Avatar className={classes.avatar} src={avatarUrl} />\n\t\t\t{/* <Typography variant=\"h1\" className={classes.title}>\n\t\t\t\tMike A. Louro\n\t\t\t</Typography> */}\n\n\t\t\t<Typography variant=\"body1\">\n\t\t\t\t<p>Hey there! Welcome to my website.</p>\n\t\t\t\t<p>This is still a work-in-progress, so please don&apos;t mind the mess as I tidy up.</p>\n\t\t\t\t<p>Thanks for stopping by. <span role=\"img\" aria-label=\"smiley face\">🙂</span></p>\n\t\t\t</Typography>\n\n\n\t\t\t<figure style={{ marginTop: spacing(8) }}>\n\t\t\t\t<Typography component=\"figcaption\" variant=\"body2\">Points of Contact:</Typography>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link href=\"https://www.linkedin.com/in/michael-louro-4b2185149/\">LinkedIn</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link href=\"http://github.com/malouro\">GitHub</Link>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</figure>\n\n\t\t</div>\n\t)\n}\n","import * as React from 'react'\nimport { Link, Typography } from '@material-ui/core'\nimport { ProjectData } from '../components/ProjectCard'\n\nconst Projects: ReadonlyArray<ProjectData> = [\n\t{\n\t\ttitle: 'Gunther Bot',\n\t\tdescription: <>\n\t\t\t<Typography variant=\"body1\">\n\t\t\t\t<code>gunther-bot</code> is a <Link href=\"http://discord.com/\">Discord</Link> chat bot that is able to parse\n\t\t\t\tquestions about <Link href=\"http://stardewvalley.net\">Stardew Valley</Link>, sent by the user, and reply back\n\t\t\t\twith responses. The scope of the questions that <code>gunther-bot</code> is able to answer is limited to the following:\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Characters & villagers</li>\n\t\t\t\t\t<li>Calendar events</li>\n\t\t\t\t\t<li>Items & resources</li>\n\t\t\t\t</ul>\n\t\t\t</Typography>\n\t\t</>,\n\t\tthumbnail: `${process.env.PUBLIC_URL}/assets/projects/GuntherBot.webp`,\n\t\tlinks: [\n\t\t\t{ url: 'https://github.com/malouro/gunther-bot', type: 'github' }\n\t\t]\n\t},\n\t{\n\t\ttitle: 'Ggis Bot',\n\t\tdescription: <>\n\t\t\t<Typography variant=\"body1\">\n\t\t\t\t<code>ggis-bot</code> is a general-purpose <Link href=\"http://discord.com/\">Discord</Link> chat bot. By cloning and running\n\t\t\t\tthe a single command, (<code>yarn setup</code> or <code>npm run setup</code>) you&apos;ll have a bot connected to your server with\n\t\t\t\tthe following features and commands:\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<strong>LFG</strong>: Look for people to play games with via <code>!lfg</code>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<strong>StreamLink</strong>: Announce to your server when you go live on Twitch via <code>!streamlink</code>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<strong>AutoReact</strong>: Configurable automation of reactions/replies to users or key words being mentioned.\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tFun and random stuff, like: opening fortune cookies, fetching random Reddit posts & more\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</Typography>\n\t\t</>,\n\t\tthumbnail: `${process.env.PUBLIC_URL}/assets/projects/GgisBot.png`,\n\t\tlinks: [\n\t\t\t{ url: 'https://github.com/malouro/ggis-bot', type: 'github' }\n\t\t]\n\t}\n]\n\nexport default Projects\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { MyTheme } from '../root/Theme'\nimport { ProjectCard } from '../components'\nimport { Projects } from '../data'\n\nexport default function ProjectsPage(): JSX.Element {\n\tconst useStyles = makeStyles((theme: typeof MyTheme) => ({\n\t\tpageTitle: {\n\t\t\tmarginBottom: theme.spacing(5)\n\t\t}\n\t}))\n\tconst classes = useStyles()\n\n\treturn (\n\t\t<>\n\t\t\t<Typography\n\t\t\t\tvariant=\"h1\"\n\t\t\t\tclassName={classes.pageTitle}\n\t\t\t>\n\t\t\t\tProjects\n\t\t\t</Typography>\n\t\t\t{Projects.map((projectData, i) =>\n\t\t\t\t<ProjectCard key={i} data={projectData} />\n\t\t\t)}\n\t\t</>\n\t)\n}\n","import React from 'react'\nimport { Route } from 'react-router'\nimport clsx from 'clsx'\n\nimport { Box, useMediaQuery } from '@material-ui/core'\nimport { makeStyles, Theme, useTheme } from '@material-ui/core/styles'\nimport { Home, Projects } from '../pages'\n\nconst MainContentStyles = makeStyles((theme: Theme) => ({\n\tcontainer: {\n\t\tbackgroundColor: 'transparent',\n\t\toutline: `2px dotted ${theme.palette.primary.main}`,\n\t\twidth: '100%',\n\t\tposition: 'relative',\n\t\tmarginTop: theme.spacing(-4),\n\t\tmarginBottom: theme.spacing(3),\n\t\tmargin: '0 auto',\n\t\tpadding: theme.spacing(4, 6, 3, 6),\n\t\tborderRadius: theme.shape.borderRadius\n\t},\n\tcontainerSm: {\n\t\tmaxWidth: 'auto',\n\t\tborderRadius: 0,\n\t\tpadding: theme.spacing(4, 0, 3, 0)\n\t},\n\tcontent: {\n\t\tpadding: theme.spacing(3)\n\t}\n}))\n\nexport interface MainContentProps {\n\tid: string,\n\ttabIndex?: 0 | -1\n}\n\nexport const MainContent = (props: MainContentProps) => {\n\tconst theme = useTheme()\n\tconst classes = MainContentStyles()\n\tconst smallView = useMediaQuery(theme.breakpoints.down('xs'))\n\n\treturn (\n\t\t<main {...props}>\n\t\t\t<Box className={clsx(classes.container, smallView && classes.containerSm)}>\n\t\t\t\t<div className={classes.content}>\n\t\t\t\t\t<Route path=\"/\" exact component={Home} />\n\t\t\t\t\t<Route path=\"/projects\" component={Projects} />\n\t\t\t\t</div>\n\t\t\t</Box>\n\t\t</main>\n\t)\n}\n","import React from 'react'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport Link from '@material-ui/core/Link'\nimport Typography from '@material-ui/core/Typography'\n\nconst SkipLinkStyles = makeStyles((theme: Theme) => createStyles({\n\tcontainer: {},\n\tskipLink: {\n\t\tleft: '-999px',\n\t\tposition: 'absolute',\n\t\ttop: 'auto',\n\t\twidth: 1,\n\t\theight: 1,\n\t\toverflow: 'hidden',\n\t\tzIndex: -999,\n\n\t\tcolor: theme.palette.getContrastText(theme.palette.background.default),\n\t\tbackgroundColor: theme.palette.background.default,\n\t\tfontSize: theme.typography.button.fontSize,\n\n\t\t'&:focus': {\n\t\t\tleft: 'auto',\n\t\t\twidth: 'auto',\n\t\t\theight: 'auto',\n\t\t\toverflow: 'auto',\n\t\t\tpadding: theme.spacing(1, 2),\n\t\t\tzIndex: 999,\n\t\t\t...theme.palette.focus\n\t\t}\n\t}\n}))\n\nexport const SkipLink = () => {\n\tconst classes = SkipLinkStyles()\n\n\treturn (\n\t\t<div className={classes.container}>\n\t\t\t<Link className={classes.skipLink} href=\"#main\">\n\t\t\t\t<Typography color=\"inherit\">Skip to main content</Typography>\n\t\t\t</Link>\n\t\t</div>\n\t)\n}\n","import { CSSProperties } from 'react'\nimport { createMuiTheme, darken } from '@material-ui/core/styles'\nimport { grey, indigo, lightBlue } from '@material-ui/core/colors'\n\n\nconst Palette = {\n\tprimary: lightBlue[300],\n\tsecondary: indigo[500]\n}\n\nconst CommonFocusStyle: CSSProperties = {\n\toutline: `4px solid ${Palette.primary}`\n}\n\nconst DisableBrowserFocusStyle: CSSProperties = {\n\toutline: 'none'\n}\n\nexport const MyTheme = createMuiTheme({\n\tpalette: {\n\t\ttype: 'dark',\n\t\t/** @ref https://www.w3.org/TR/WCAG21/#contrast-minimum */\n\t\tcontrastThreshold: 4.5,\n\t\tbackground: {\n\t\t\tdefault: darken(indigo[900], 0.5),\n\t\t\tpaper: grey[900]\n\t\t},\n\t\tfocus: CommonFocusStyle,\n\t\tprimary: {\n\t\t\tmain: Palette.primary\n\t\t},\n\t\tsecondary: {\n\t\t\tmain: Palette.secondary\n\t\t}\n\t},\n\ttypography: {\n\t\tfontFamily: [\n\t\t\t'Roboto',\n\t\t\t'\\'Helvetica Neue\\'',\n\t\t\t'sans-serif'\n\t\t].join(','),\n\t\th1: { fontSize: '3rem' },\n\t\th2: { fontSize: '2rem' },\n\t\th3: { fontSize: '1.75rem' },\n\t\th4: { fontSize: '1.5rem' }\n\t},\n\tshape: {\n\t\tborderRadius: 0\n\t},\n\toverrides: {\n\t\tMuiCssBaseline: {\n\t\t\t'@global': {\n\t\t\t\tbody: {\n\t\t\t\t\t'& code': {\n\t\t\t\t\t\tcolor: Palette.primary,\n\t\t\t\t\t\tfontWeight: 600\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t':focus': DisableBrowserFocusStyle\n\t\t\t}\n\t\t},\n\t\tMuiButtonBase: {\n\t\t\troot: {\n\t\t\t\t'&$focusVisible': CommonFocusStyle\n\t\t\t}\n\t\t},\n\t\tMuiLink: {\n\t\t\troot: {\n\t\t\t\tcolor: 'inherit',\n\t\t\t\t'&$focusVisible': CommonFocusStyle,\n\t\t\t\t'&:hover': {\n\t\t\t\t\ttextDecorationThickness: '5px',\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tMuiCard: {\n\t\t\troot: {\n\t\t\t\tbackgroundColor: 'transparent'\n\t\t\t}\n\t\t}\n\t},\n\tprops: {\n\t\tMuiButton: {\n\t\t\tdisableFocusRipple: true\n\t\t},\n\t\tMuiIconButton: {\n\t\t\tdisableFocusRipple: true\n\t\t},\n\t\tMuiLink: {\n\t\t\tunderline: 'always'\n\t\t}\n\t}\n})\n","import React from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\n\nimport { Header, MainContent, SkipLink } from '../components'\nimport { MyTheme } from './Theme'\n\nfunction App() {\n\treturn (\n\t\t<ThemeProvider theme={MyTheme}>\n\t\t\t<CssBaseline />\n\t\t\t<SkipLink />\n\t\t\t<Header />\n\t\t\t<Router>\n\t\t\t\t<MainContent id=\"main\" tabIndex={-1} />\n\t\t\t</Router>\n\t\t</ThemeProvider>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './root/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}