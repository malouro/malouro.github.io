{"version":3,"sources":["components/Header/Header.tsx","components/SkipLink/SkipLink.tsx","pages/home/Home.tsx","root/MainContent.tsx","root/Theme.ts","root/App.tsx","serviceWorker.ts","index.tsx"],"names":["HeaderStyles","makeStyles","theme","container","position","height","overflow","color","palette","getContrastText","primary","dark","headerBg","top","bottom","left","right","width","backgroundImage","main","transform","transformOrigin","title","flexGrow","menuButton","Header","props","useTheme","classes","className","AppBar","elevation","Toolbar","Typography","children","useMediaQuery","breakpoints","down","IconButton","edge","aria-label","Menu","Button","href","SkipLinkStyles","createStyles","skipLink","zIndex","backgroundColor","padding","textAlign","fontSize","typography","body1","focusBorder","SkipLink","Link","HomeStyles","marginBottom","spacing","Home","variant","component","role","MainContentStyles","background","paper","maxWidth","marginTop","margin","borderRadius","shape","containerSm","content","MainContent","smallView","Paper","clsx","path","CommonFocusStyle","outline","outlineOffset","MyTheme","createMuiTheme","contrastThreshold","teal","overrides","MuiCssBaseline","body","grey","images","MuiButton","root","textTransform","MuiLink","App","ThemeProvider","CssBaseline","id","tabIndex","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bb7b6356.chunk.js","sourcesContent":["import React from 'react'\nimport { makeStyles, Theme, useTheme } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport { Menu as MenuIcon } from '@material-ui/icons'\n\nexport const HeaderStyles = makeStyles((theme: Theme) => ({\n\tcontainer: {\n\t\tposition: 'relative',\n\t\theight: 200,\n\t\toverflow: 'hidden',\n\t\tcolor: theme.palette.getContrastText(theme.palette.primary.dark)\n\t},\n\theaderBg: {\n\t\tposition: 'absolute',\n\t\ttop: 0,\n\t\tbottom: 0,\n\t\tleft: 0,\n\t\tright: 0,\n\t\twidth: '100%',\n\t\theight: '100%',\n\t\tbackgroundImage:\n\t\t\t`linear-gradient(${theme.palette.primary.main}, ${theme.palette.primary.dark})`,\n\t\ttransform: 'skewY(-4deg)',\n\t\ttransformOrigin: 'top left'\n\t},\n\ttitle: {\n\t\tflexGrow: 1\n\t},\n\tmenuButton: { }\n}))\n\nexport interface HeaderProps<> {\n\t/* This renders in the \"title\" */\n\tchildren: React.ReactNode\n}\n\nexport const Header = (props: HeaderProps) => {\n\tconst theme = useTheme()\n\tconst classes = HeaderStyles()\n\n\treturn (\n\t\t<header className={classes.container}>\n\t\t\t<div className={classes.headerBg} />\n\t\t\t<AppBar position=\"static\" color=\"transparent\" elevation={0}>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<Typography className={classes.title}>{props.children}</Typography>\n\t\t\t\t\t{useMediaQuery(theme.breakpoints.down('xs')) ? (\n\t\t\t\t\t\t// Mobile view\n\t\t\t\t\t\t<IconButton className={classes.menuButton} edge=\"start\" color=\"inherit\" aria-label=\"Open menu\">\n\t\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t// Desktop view\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Button color=\"inherit\" href=\"/blog\">Blog</Button>\n\t\t\t\t\t\t\t<Button color=\"inherit\" href=\"/projects\">Projects</Button>\n\t\t\t\t\t\t\t<Button color=\"inherit\" href=\"/contact\">Contact</Button>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</header>\n\t)\n}\n","import React from 'react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\nimport Link from '@material-ui/core/Link'\nimport Typography from '@material-ui/core/Typography'\n\nexport const SkipLinkStyles = makeStyles((theme) => createStyles({\n\tskipLink: {\n\t\tleft: '-999px',\n\t\tposition: 'absolute',\n\t\ttop: 'auto',\n\t\twidth: 1,\n\t\theight: 1,\n\t\toverflow: 'hidden',\n\t\tzIndex: -999,\n\t\t'&:focus': {\n\t\t\tcolor: theme.palette.getContrastText(theme.palette.primary.main),\n\t\t\tbackgroundColor: theme.palette.primary.main,\n\t\t\tleft: 'auto',\n\t\t\twidth: 'auto',\n\t\t\theight: 'auto',\n\t\t\toverflow: 'auto',\n\t\t\tpadding: 5,\n\t\t\ttextAlign: 'center',\n\t\t\tfontSize: theme.typography.body1.fontSize,\n\t\t\tzIndex: 999,\n\t\t\t...theme.palette.focusBorder\n\t\t}\n\t}\n}))\n\nexport const SkipLink = () => {\n\tconst classes = SkipLinkStyles()\n\n\treturn (\n\t\t<Link className={classes.skipLink} href=\"#main\">\n\t\t\t<Typography>Skip to main content</Typography>\n\t\t</Link>\n\t)\n}\n","import React from 'react'\n\nimport Typography from '@material-ui/core/Typography'\nimport { Link, makeStyles } from '@material-ui/core'\n\nexport const HomeStyles = makeStyles(theme => ({\n\ttitle: {\n\t\tmarginBottom: theme.spacing(4)\n\t}\n}))\n\nexport const Home = () => {\n\tconst classes = HomeStyles()\n\n\treturn (\n\t\t<>\n\t\t\t<Typography variant=\"h4\" component=\"h1\" className={classes.title}>\n\t\t\t\tWelcome! <span role=\"img\" aria-label=\"Hand waving 'hello'\">ðŸ‘‹</span>\n\t\t\t</Typography>\n\t\t\t<Typography>Main content goes here.</Typography>\n\t\t\t<Link href=\"google.com\">Google link</Link>\n\t\t</>\n\t)\n}\n","import React from 'react'\nimport { Route } from 'react-router'\nimport clsx from 'clsx'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\n\nimport Paper from '@material-ui/core/Paper'\nimport { Home } from '../pages'\n\nexport const MainContentStyles = makeStyles((theme) => ({\n\tcontainer: {\n\t\tbackgroundColor: theme.palette.background.paper,\n\t\tmaxWidth: 750,\n\t\tposition: 'relative',\n\t\tmarginTop: theme.spacing(-4),\n\t\tmarginBottom: theme.spacing(3),\n\t\tmargin: '0 auto',\n\t\tpadding: theme.spacing(4, 6, 3, 6),\n\t\tborderRadius: theme.shape.borderRadius\n\t},\n\tcontainerSm: {\n\t\tmaxWidth: 'auto',\n\t\tborderRadius: 0\n\t},\n\tcontent: {\n\t\tpadding: theme.spacing(3)\n\t}\n}))\n\nexport interface MainContentProps {\n\tid: string,\n\ttabIndex?: 0 | -1\n}\n\nexport const MainContent = (props: MainContentProps) => {\n\tconst theme = useTheme()\n\tconst classes = MainContentStyles()\n\tconst smallView = useMediaQuery(theme.breakpoints.down('xs'))\n\n\treturn (\n\t\t<main {...props}>\n\t\t\t<Paper className={clsx(classes.container, smallView && classes.containerSm)}>\n\t\t\t\t<div className={classes.content}>\n\t\t\t\t\t<Route path=\"/\" component={Home} />\n\t\t\t\t</div>\n\t\t\t</Paper>\n\t\t</main>\n\t)\n}\n","import { createMuiTheme } from '@material-ui/core/styles'\nimport { grey, teal } from '@material-ui/core/colors'\nimport { images } from './bg.json'\n\nexport const CommonFocusStyle = {\n\toutline: '3px solid black',\n\toutlineOffset: 0\n}\n\nexport const DisableFocusStyle = {\n\toutline: 'none'\n}\n\nexport const MyTheme = createMuiTheme({\n\tpalette: {\n\t\tcontrastThreshold: 4.5,\n\t\tfocusBorder: CommonFocusStyle,\n\t\tprimary: {\n\t\t\tmain: teal[700]\n\t\t}\n\t},\n\tshape: {\n\t\tborderRadius: 5\n\t},\n\toverrides: {\n\t\tMuiCssBaseline: {\n\t\t\t'@global': {\n\t\t\t\tbody: {\n\t\t\t\t\tbackgroundColor: grey[100],\n\t\t\t\t\tbackgroundImage: images[0]\n\t\t\t\t},\n\t\t\t\t':focus': DisableFocusStyle\n\t\t\t}\n\t\t},\n\t\tMuiButton: {\n\t\t\troot: {\n\t\t\t\ttextTransform: 'none'\n\t\t\t}\n\t\t},\n\t\tMuiLink: {\n\t\t\troot: {\n\t\t\t\t'&$focusVisible': CommonFocusStyle\n\t\t\t}\n\t\t}\n\t}\n})\n","import React from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Typography from '@material-ui/core/Typography'\n\nimport { Header, SkipLink } from '../components'\nimport { MainContent } from './MainContent'\nimport { MyTheme } from './Theme'\n\nfunction App() {\n\treturn (\n\t\t<ThemeProvider theme={MyTheme}>\n\t\t\t<CssBaseline />\n\t\t\t<SkipLink />\n\t\t\t<Header>\n\t\t\t\t<Typography>Mike A. Louro</Typography>\n\t\t\t</Header>\n\t\t\t<Router>\n\t\t\t\t<MainContent id=\"main\" tabIndex={-1} />\n\t\t\t</Router>\n\t\t</ThemeProvider>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './root/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}